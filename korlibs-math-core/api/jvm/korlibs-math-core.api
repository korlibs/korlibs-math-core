public final class korlibs/io/util/NumberExtKt {
	public static final fun toStringDecimal (DIZ)Ljava/lang/String;
	public static final fun toStringDecimal (FIZ)Ljava/lang/String;
	public static synthetic fun toStringDecimal$default (DIZILjava/lang/Object;)Ljava/lang/String;
	public static synthetic fun toStringDecimal$default (FIZILjava/lang/Object;)Ljava/lang/String;
}

public final class korlibs/io/util/NumberParser {
	public static final field END C
	public static final field INSTANCE Lkorlibs/io/util/NumberParser;
	public final fun parseDouble (Ljava/lang/String;II)D
	public final fun parseDouble (Lkotlin/jvm/functions/Function1;)D
	public static synthetic fun parseDouble$default (Lkorlibs/io/util/NumberParser;Ljava/lang/String;IIILjava/lang/Object;)D
	public final fun parseInt (ILkotlin/jvm/functions/Function1;)I
	public final fun parseInt (Ljava/lang/String;III)I
	public static synthetic fun parseInt$default (Lkorlibs/io/util/NumberParser;ILkotlin/jvm/functions/Function1;ILjava/lang/Object;)I
	public static synthetic fun parseInt$default (Lkorlibs/io/util/NumberParser;Ljava/lang/String;IIIILjava/lang/Object;)I
}

public final class korlibs/io/util/NumberParserKt {
	public static final fun ctypeAsInt (C)I
}

public final class korlibs/math/AlignmentKt {
	public static final fun isAlignedTo (DD)Z
	public static final fun isAlignedTo (FF)Z
	public static final fun isAlignedTo (II)Z
	public static final fun isAlignedTo (JJ)Z
	public static final fun nearestAlignedTo (DD)D
	public static final fun nearestAlignedTo (FF)F
	public static final fun nextAlignedTo (DD)D
	public static final fun nextAlignedTo (FF)F
	public static final fun nextAlignedTo (II)I
	public static final fun nextAlignedTo (JJ)J
	public static final fun prevAlignedTo (DD)D
	public static final fun prevAlignedTo (FF)F
	public static final fun prevAlignedTo (II)I
	public static final fun prevAlignedTo (JJ)J
}

public final class korlibs/math/BooleanConversionKt {
	public static final fun toBoolean (B)Z
	public static final fun toByte (Z)B
	public static final fun toInt (Z)I
}

public final class korlibs/math/ClampKt {
	public static final fun clamp (DDD)D
	public static final fun clamp (FFF)F
	public static final fun clamp (III)I
	public static final fun clamp (JJJ)J
	public static final fun clamp01 (D)D
	public static final fun clamp01 (F)F
	public static final fun clampUByte (I)I
	public static final fun clampUShort (I)I
	public static final fun toByteClamped (I)B
	public static final fun toIntClamp (JII)I
	public static synthetic fun toIntClamp$default (JIIILjava/lang/Object;)I
	public static final fun toShortClamped (I)S
	public static final fun toUintClamp (JII)I
	public static synthetic fun toUintClamp$default (JIIILjava/lang/Object;)I
}

public final class korlibs/math/ConvertRangeKt {
	public static final fun convertRange (DDDDD)D
	public static final fun convertRange (FFFFF)F
	public static final fun convertRange (IIIII)I
	public static final fun convertRange (JJJJJ)J
	public static final fun convertRangeClamped (DDDDD)D
	public static final fun convertRangeClamped (FFFFF)F
	public static final fun convertRangeClamped (IIIII)I
	public static final fun convertRangeClamped (JJJJJ)J
}

public final class korlibs/math/DivisionKt {
	public static final fun divCeil (II)I
	public static final fun divCeil (JJ)J
	public static final fun divFloor (II)I
	public static final fun divRound (II)I
}

public final class korlibs/math/FractKt {
	public static final fun fract (D)D
	public static final fun fract (F)F
}

public final class korlibs/math/ILogKt {
	public static final fun ilog2 (I)I
	public static final fun ilog2Ceil (I)I
}

public abstract interface class korlibs/math/IsAlmostEquals {
	public abstract fun isAlmostEquals (Ljava/lang/Object;D)Z
}

public final class korlibs/math/IsAlmostEquals$DefaultImpls {
	public static synthetic fun isAlmostEquals$default (Lkorlibs/math/IsAlmostEquals;Ljava/lang/Object;DILjava/lang/Object;)Z
}

public abstract interface class korlibs/math/IsAlmostEqualsF {
	public abstract fun isAlmostEquals (Ljava/lang/Object;F)Z
}

public final class korlibs/math/IsAlmostEqualsF$DefaultImpls {
	public static synthetic fun isAlmostEquals$default (Lkorlibs/math/IsAlmostEqualsF;Ljava/lang/Object;FILjava/lang/Object;)Z
}

public final class korlibs/math/IsAlmostEqualsKt {
	public static final fun isAlmostEquals (DDD)Z
	public static final fun isAlmostEquals (FFF)Z
	public static synthetic fun isAlmostEquals$default (DDDILjava/lang/Object;)Z
	public static synthetic fun isAlmostEquals$default (FFFILjava/lang/Object;)Z
}

public final class korlibs/math/IsAlmostZeroKt {
	public static final fun isAlmostZero (D)Z
	public static final fun isAlmostZero (F)Z
}

public final class korlibs/math/IsEvenKt {
	public static final fun isEven (I)Z
	public static final fun isOdd (I)Z
}

public final class korlibs/math/IsNanOrInfiniteKt {
	public static final fun isNanOrInfinite (D)Z
	public static final fun isNanOrInfinite (F)Z
}

public final class korlibs/math/MathKt {
	public static final field PI2F F
	public static final field PIF F
	public static final fun almostEquals (DD)Z
	public static final fun almostEquals (FF)Z
	public static final fun almostZero (D)Z
	public static final fun almostZero (F)Z
	public static final fun betweenInclusive (DDD)Z
	public static final fun closestMultipleOf (DD)D
	public static final fun closestMultipleOf (II)I
	public static final fun closestMultipleOf (JJ)J
	public static final fun cycle (III)I
	public static final fun cycleSteps (III)I
	public static final fun getSignM1 (D)D
	public static final fun getSignM1 (F)F
	public static final fun getSignM1 (I)I
	public static final fun getSignP1 (D)D
	public static final fun getSignP1 (F)F
	public static final fun getSignP1 (I)I
	public static final fun isEquivalent (DDD)Z
	public static synthetic fun isEquivalent$default (DDDILjava/lang/Object;)Z
	public static final fun isMultipleOf (DD)Z
	public static final fun isMultipleOf (II)Z
	public static final fun isMultipleOf (JJ)Z
	public static final fun ln (I)I
	public static final fun log (II)I
	public static final fun log10 (I)I
	public static final fun log2 (I)I
	public static final fun max (DDD)D
	public static final fun max (DDDD)D
	public static final fun max (DDDDD)D
	public static final fun max (FFF)F
	public static final fun max (FFFF)F
	public static final fun max (FFFFF)F
	public static final fun max (III)I
	public static final fun max (IIII)I
	public static final fun max (IIIII)I
	public static final fun min (DDD)D
	public static final fun min (DDDD)D
	public static final fun min (DDDDD)D
	public static final fun min (FFF)F
	public static final fun min (FFFF)F
	public static final fun min (FFFFF)F
	public static final fun min (III)I
	public static final fun min (IIII)I
	public static final fun min (IIIII)I
	public static final fun nextMultipleOf (DD)D
	public static final fun nextMultipleOf (II)I
	public static final fun nextMultipleOf (JJ)J
	public static final fun normalizeAlmostZero (F)F
	public static final fun numberOfDigits (II)I
	public static final fun numberOfDigits (JI)I
	public static synthetic fun numberOfDigits$default (IIILjava/lang/Object;)I
	public static synthetic fun numberOfDigits$default (JIILjava/lang/Object;)I
	public static final fun prevMultipleOf (DD)D
	public static final fun prevMultipleOf (II)I
	public static final fun prevMultipleOf (JJ)J
	public static final fun signNonZeroM1 (D)I
	public static final fun signNonZeroM1 (F)I
	public static final fun signNonZeroM1 (I)I
	public static final fun signNonZeroP1 (D)I
	public static final fun signNonZeroP1 (F)I
	public static final fun signNonZeroP1 (I)I
	public static final fun smoothstep (DDD)D
	public static final fun sq (D)D
	public static final fun sq (F)F
	public static final fun sq (I)I
	public static final fun squared (D)D
	public static final fun squared (F)F
	public static final fun squared (I)I
}

public final class korlibs/math/NormalizeZeroKt {
	public static final fun normalizeZero (D)D
	public static final fun normalizeZero (F)F
}

public final class korlibs/math/PowerOfTwoKt {
	public static final fun getNextPowerOfTwo (I)I
	public static final fun getPrevPowerOfTwo (I)I
	public static final fun isPowerOfTwo (I)Z
}

public final class korlibs/math/RoundDecimalPlacesKt {
	public static final fun roundDecimalPlaces (DI)D
	public static final fun roundDecimalPlaces (FI)F
}

public final class korlibs/math/ToIntegerConvertersKt {
	public static final fun toIntCeil (D)I
	public static final fun toIntCeil (F)I
	public static final fun toIntFloor (D)I
	public static final fun toIntFloor (F)I
	public static final fun toIntRound (D)I
	public static final fun toIntRound (F)I
	public static final fun toIntSafe (J)I
	public static final fun toLongRound (D)J
	public static final fun toLongRound (F)J
}

public final class korlibs/math/UmodKt {
	public static final fun umod (DD)D
	public static final fun umod (FF)F
	public static final fun umod (II)I
}

public final class korlibs/math/UnsignedKt {
	public static final fun getUnsigned (B)I
	public static final fun getUnsigned (I)J
	public static final fun getUnsigned (S)I
}

public abstract interface annotation class korlibs/math/annotations/KorDslMarker : java/lang/annotation/Annotation {
}

public abstract interface annotation class korlibs/math/annotations/KormaExperimental : java/lang/annotation/Annotation {
	public abstract fun reason ()Ljava/lang/String;
}

public abstract interface annotation class korlibs/math/annotations/KormaMutableApi : java/lang/annotation/Annotation {
}

public abstract interface annotation class korlibs/math/annotations/RootViewDslMarker : java/lang/annotation/Annotation {
}

public abstract interface annotation class korlibs/math/annotations/VectorDslMarker : java/lang/annotation/Annotation {
}

public abstract interface annotation class korlibs/math/annotations/ViewDslMarker : java/lang/annotation/Annotation {
}

public abstract interface class korlibs/math/interpolation/Easing {
	public static final field Companion Lkorlibs/math/interpolation/Easing$Companion;
	public abstract fun invoke (D)D
	public abstract fun invoke (F)F
	public abstract fun invoke-ce6x77s (D)D
}

public final class korlibs/math/interpolation/Easing$Companion {
	public final fun combine (FLkorlibs/math/interpolation/Easing;Lkorlibs/math/interpolation/Easing;)F
	public final fun combine (Lkorlibs/math/interpolation/Easing;Lkorlibs/math/interpolation/Easing;)Lkorlibs/math/interpolation/Easing;
	public final fun cubic (Lkotlin/jvm/functions/Function4;)Lkorlibs/math/interpolation/Easing;
	public final fun getLINEAR ()Lkorlibs/math/interpolation/Easing;
	public final fun getSMOOTH ()Lkorlibs/math/interpolation/Easing;
	public final fun invoke (Lkotlin/jvm/functions/Function0;Lkotlin/jvm/functions/Function1;)Lkorlibs/math/interpolation/Easing;
	public final fun steps (ILkorlibs/math/interpolation/Easing;)Lkorlibs/math/interpolation/Easing;
}

public final class korlibs/math/interpolation/Easing$DefaultImpls {
	public static fun invoke (Lkorlibs/math/interpolation/Easing;D)D
	public static fun invoke-ce6x77s (Lkorlibs/math/interpolation/Easing;D)D
}

public final class korlibs/math/interpolation/EasingKt {
	public static final fun interpolate-aphylw4 (DDD)D
	public static final fun interpolate-aphylw4 (DFF)F
	public static final fun interpolate-aphylw4 (DII)I
	public static final fun interpolate-aphylw4 (DJJ)J
	public static final fun interpolate-aphylw4 (DLkorlibs/math/interpolation/Interpolable;Lkorlibs/math/interpolation/Interpolable;)Lkorlibs/math/interpolation/Interpolable;
	public static final fun interpolate-yBVj4vc (DDD)D
}

public abstract interface class korlibs/math/interpolation/Interpolable {
	public abstract fun interpolateWith-DJj3pIk (DLjava/lang/Object;)Ljava/lang/Object;
}

public abstract interface class korlibs/math/interpolation/MutableInterpolable {
	public abstract fun setToInterpolated-aphylw4 (DLjava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
}

public final class korlibs/math/interpolation/Ratio : java/lang/Comparable {
	public static final field Companion Lkorlibs/math/interpolation/Ratio$Companion;
	public static final synthetic fun box-impl (D)Lkorlibs/math/interpolation/Ratio;
	public synthetic fun compareTo (Ljava/lang/Object;)I
	public fun compareTo-kg1FUQ0 (D)I
	public static fun compareTo-kg1FUQ0 (DD)I
	public static fun constructor-impl (D)D
	public static fun constructor-impl (DD)D
	public static fun constructor-impl (F)D
	public static fun constructor-impl (FF)D
	public static fun constructor-impl (II)D
	public static final fun convertToRange-D0yuuBI (DDD)D
	public static final fun convertToRange-impl (DDD)D
	public static final fun convertToRange-impl (DFF)F
	public static final fun div-ce6x77s (DD)D
	public static final fun div-impl (DD)D
	public fun equals (Ljava/lang/Object;)Z
	public static fun equals-impl (DLjava/lang/Object;)Z
	public static final fun equals-impl0 (DD)Z
	public static final fun getAbsoluteValue-eKSQRR4 (D)D
	public static final fun getClamped-eKSQRR4 (D)D
	public final fun getValue ()D
	public fun hashCode ()I
	public static fun hashCode-impl (D)I
	public static final fun isNaN-impl (D)Z
	public static final fun minus-ce6x77s (DD)D
	public static final fun plus-ce6x77s (DD)D
	public static final fun times-ce6x77s (DD)D
	public static final fun times-impl (DD)D
	public static final fun toDouble-impl (D)D
	public static final fun toFloat-impl (D)F
	public fun toString ()Ljava/lang/String;
	public static fun toString-impl (D)Ljava/lang/String;
	public static final fun unaryMinus-eKSQRR4 (D)D
	public static final fun unaryPlus-eKSQRR4 (D)D
	public final synthetic fun unbox-impl ()D
}

public final class korlibs/math/interpolation/Ratio$Companion {
	public final fun forEachRatio (IZZLkotlin/jvm/functions/Function1;)V
	public static synthetic fun forEachRatio$default (Lkorlibs/math/interpolation/Ratio$Companion;IZZLkotlin/jvm/functions/Function1;ILjava/lang/Object;)V
	public final fun fromValueInRange-DjXDSvE (Ljava/lang/Number;Ljava/lang/Number;Ljava/lang/Number;)D
	public final fun fromValueInRangeClamped-DjXDSvE (Ljava/lang/Number;Ljava/lang/Number;Ljava/lang/Number;)D
	public final fun getHALF-eKSQRR4 ()D
	public final fun getNaN-eKSQRR4 ()D
	public final fun getONE-eKSQRR4 ()D
	public final fun getQUARTER-eKSQRR4 ()D
	public final fun getZERO-eKSQRR4 ()D
}

public final class korlibs/math/interpolation/RatioKt {
	public static final fun abs-kg1FUQ0 (D)D
	public static final fun clamp-yBVj4vc (DDD)D
	public static final fun convertRange-BKgx9t0 (DDDDD)D
	public static final fun div-BdQlfBE (DD)D
	public static final fun div-BdQlfBE (FD)F
	public static final fun div-BdQlfBE (ID)D
	public static final fun div-DJj3pIk (DD)D
	public static final fun div-DJj3pIk (DF)F
	public static final fun isAlmostEquals-yBVj4vc (DDD)Z
	public static synthetic fun isAlmostEquals-yBVj4vc$default (DDDILjava/lang/Object;)Z
	public static final fun isAlmostZero-QGGGw1I (DD)Z
	public static synthetic fun isAlmostZero-QGGGw1I$default (DDILjava/lang/Object;)Z
	public static final fun max-QGGGw1I (DD)D
	public static final fun min-QGGGw1I (DD)D
	public static final fun roundDecimalPlaces-DJj3pIk (DI)D
	public static final fun times-BdQlfBE (DD)D
	public static final fun times-BdQlfBE (FD)F
	public static final fun times-BdQlfBE (ID)D
	public static final fun times-DJj3pIk (DD)D
	public static final fun times-DJj3pIk (DF)F
	public static final fun times-QGGGw1I (DD)D
	public static final fun toRatio (D)D
	public static final fun toRatio (DD)D
	public static final fun toRatio (F)D
	public static final fun toRatio (FF)D
	public static final fun toRatio (Ljava/lang/Number;)D
	public static final fun toRatio (Ljava/lang/Number;Ljava/lang/Number;)D
	public static final fun toRatio-kg1FUQ0 (D)D
	public static final fun toRatioClamped (D)D
	public static final fun toRatioClamped (F)D
	public static final fun toRatioClamped (Ljava/lang/Number;)D
}

public final class korlibs/math/range/DoubleRangeExclusive {
	public fun <init> (DD)V
	public final fun component1 ()D
	public final fun component2 ()D
	public final fun contains (D)Z
	public final fun copy (DD)Lkorlibs/math/range/DoubleRangeExclusive;
	public static synthetic fun copy$default (Lkorlibs/math/range/DoubleRangeExclusive;DDILjava/lang/Object;)Lkorlibs/math/range/DoubleRangeExclusive;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getEndExclusive ()D
	public final fun getLength ()D
	public final fun getStart ()D
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class korlibs/math/range/FloatInRange {
	public fun <init> (FFFZ)V
	public synthetic fun <init> (FFFZILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()F
	public final fun component2 ()F
	public final fun component3 ()F
	public final fun component4 ()Z
	public final fun copy (FFFZ)Lkorlibs/math/range/FloatInRange;
	public static synthetic fun copy$default (Lkorlibs/math/range/FloatInRange;FFFZILjava/lang/Object;)Lkorlibs/math/range/FloatInRange;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getInclusive ()Z
	public final fun getMax ()F
	public final fun getMin ()F
	public final fun getValue ()F
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class korlibs/math/range/FloatRangeExclusive {
	public fun <init> (FF)V
	public final fun component1 ()F
	public final fun component2 ()F
	public final fun contains (D)Z
	public final fun copy (FF)Lkorlibs/math/range/FloatRangeExclusive;
	public static synthetic fun copy$default (Lkorlibs/math/range/FloatRangeExclusive;FFILjava/lang/Object;)Lkorlibs/math/range/FloatRangeExclusive;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getEndExclusive ()F
	public final fun getLength ()F
	public final fun getStart ()F
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class korlibs/math/range/OpenRange {
	public fun <init> (Ljava/lang/Comparable;Ljava/lang/Comparable;)V
	public final fun getEndExclusive ()Ljava/lang/Comparable;
	public final fun getStart ()Ljava/lang/Comparable;
}

public final class korlibs/math/range/OpenRangeKt {
	public static final fun contains (Lkorlibs/math/range/OpenRange;Ljava/lang/Comparable;)Z
}

public final class korlibs/math/range/RangesKt {
	public static final fun until (DD)Lkorlibs/math/range/DoubleRangeExclusive;
	public static final fun until (FF)Lkorlibs/math/range/FloatRangeExclusive;
}

public final class korlibs/memory/BitsKt {
	public static final fun bit (I)I
	public static final fun clear (III)I
	public static final fun countLeadingOnes (I)I
	public static final fun countLeadingZeros (I)I
	public static final fun countTrailingOnes (I)I
	public static final fun countTrailingZeros (I)I
	public static final fun extract (II)Z
	public static final fun extract (III)I
	public static final fun extract1 (II)I
	public static final fun extract10 (II)I
	public static final fun extract11 (II)I
	public static final fun extract12 (II)I
	public static final fun extract13 (II)I
	public static final fun extract14 (II)I
	public static final fun extract15 (II)I
	public static final fun extract16 (II)I
	public static final fun extract16Signed (II)I
	public static final fun extract17 (II)I
	public static final fun extract18 (II)I
	public static final fun extract19 (II)I
	public static final fun extract2 (II)I
	public static final fun extract20 (II)I
	public static final fun extract21 (II)I
	public static final fun extract22 (II)I
	public static final fun extract23 (II)I
	public static final fun extract24 (II)I
	public static final fun extract25 (II)I
	public static final fun extract26 (II)I
	public static final fun extract27 (II)I
	public static final fun extract28 (II)I
	public static final fun extract29 (II)I
	public static final fun extract3 (II)I
	public static final fun extract30 (II)I
	public static final fun extract31 (II)I
	public static final fun extract32 (II)I
	public static final fun extract4 (II)I
	public static final fun extract5 (II)I
	public static final fun extract6 (II)I
	public static final fun extract7 (II)I
	public static final fun extract8 (II)I
	public static final fun extract8Signed (II)I
	public static final fun extract9 (II)I
	public static final fun extractBool (II)Z
	public static final fun extractByte (II)B
	public static final fun extractMaskRange (I)I
	public static final fun extractScaled (IIII)I
	public static final fun extractScaledFF (III)I
	public static final fun extractScaledFFDefault (IIII)I
	public static final fun extractScaledf01 (III)F
	public static final fun extractShort (II)S
	public static final fun extractSigned (III)I
	public static final fun extractSigned (IIIZ)I
	public static final fun fastForEachOneBits (ILkotlin/jvm/functions/Function1;)V
	public static final fun finsert (III)I
	public static final fun finsert (IZI)I
	public static final fun finsert1 (III)I
	public static final fun finsert12 (III)I
	public static final fun finsert16 (III)I
	public static final fun finsert2 (III)I
	public static final fun finsert24 (III)I
	public static final fun finsert3 (III)I
	public static final fun finsert4 (III)I
	public static final fun finsert5 (III)I
	public static final fun finsert6 (III)I
	public static final fun finsert7 (III)I
	public static final fun finsert8 (III)I
	public static final fun fromLowHigh (Lkotlin/jvm/internal/LongCompanionObject;II)J
	public static final fun getHigh (J)I
	public static final fun getLow (J)I
	public static final fun get_high (J)I
	public static final fun get_low (J)I
	public static final fun hasBitSet (II)Z
	public static final fun hasBits (II)Z
	public static final fun hasBits (JJ)Z
	public static final fun hasFlags (II)Z
	public static final fun hasFlags (JJ)Z
	public static final fun insert (IIII)I
	public static final fun insert (IZI)I
	public static final fun insert1 (III)I
	public static final fun insert10 (III)I
	public static final fun insert11 (III)I
	public static final fun insert12 (III)I
	public static final fun insert13 (III)I
	public static final fun insert14 (III)I
	public static final fun insert15 (III)I
	public static final fun insert16 (III)I
	public static final fun insert17 (III)I
	public static final fun insert18 (III)I
	public static final fun insert19 (III)I
	public static final fun insert2 (III)I
	public static final fun insert20 (III)I
	public static final fun insert21 (III)I
	public static final fun insert22 (III)I
	public static final fun insert23 (III)I
	public static final fun insert24 (III)I
	public static final fun insert25 (III)I
	public static final fun insert26 (III)I
	public static final fun insert27 (III)I
	public static final fun insert28 (III)I
	public static final fun insert29 (III)I
	public static final fun insert3 (III)I
	public static final fun insert30 (III)I
	public static final fun insert31 (III)I
	public static final fun insert32 (III)I
	public static final fun insert4 (III)I
	public static final fun insert5 (III)I
	public static final fun insert6 (III)I
	public static final fun insert7 (III)I
	public static final fun insert8 (III)I
	public static final fun insert9 (III)I
	public static final fun insertMask (IIII)I
	public static final fun insertNoClear (IIII)I
	public static final fun insertScaled (IIIII)I
	public static final fun insertScaledFF (IIII)I
	public static final fun insertScaledf01 (IFII)I
	public static final fun mask (I)I
	public static final fun mask (II)I
	public static final fun mask (J)J
	public static final fun mask (JI)J
	public static final fun reinterpretAsDouble (J)D
	public static final fun reinterpretAsFloat (I)F
	public static final fun reinterpretAsInt (F)I
	public static final fun reinterpretAsLong (D)J
	public static final fun reverseBits (I)I
	public static final fun reverseBytes (C)C
	public static final fun reverseBytes (I)I
	public static final fun reverseBytes (J)J
	public static final fun reverseBytes (S)S
	public static final fun rotateLeft (II)I
	public static final fun rotateLeft (JI)J
	public static final fun rotateLeft-qim9Vi0 (II)I
	public static final fun rotateRight (II)I
	public static final fun rotateRight (JI)J
	public static final fun rotateRight-qim9Vi0 (II)I
	public static final fun setBits (II)I
	public static final fun setBits (IIZ)I
	public static final fun signExtend (II)I
	public static final fun signExtend (JI)J
	public static final fun unsetBits (II)I
	public static final fun with (II)I
	public static final fun with (JJ)J
	public static final fun without (II)I
	public static final fun without (JJ)J
}

public final class korlibs/memory/DoubleBitsKt {
	public static final fun equalsRawSlow (DD)Z
	public static final fun fromLowHighBitsSlow (Lkotlin/jvm/internal/DoubleCompanionObject;II)D
	public static final fun fromParts (Lkotlin/jvm/internal/DoubleCompanionObject;IID)D
	public static final fun fromParts (Lkotlin/jvm/internal/DoubleCompanionObject;IIII)D
	public static final fun fromParts (Lkotlin/jvm/internal/DoubleCompanionObject;IIJ)D
	public static final fun getBitsExponent (D)I
	public static final fun getBitsMantissaDouble (D)D
	public static final fun getBitsMantissaHigh (D)I
	public static final fun getBitsMantissaLong (D)J
	public static final fun getBitsMantissaLow (D)I
	public static final fun getBitsSign (D)I
	public static final fun getHighSlow (D)I
	public static final fun getLowHighBitsSlow (DLkotlin/jvm/functions/Function2;)Ljava/lang/Object;
	public static final fun getLowSlow (D)I
	public static final fun getTWO_POW_32 (Lkotlin/jvm/internal/DoubleCompanionObject;)D
	public static final fun toStringInfo (D)Ljava/lang/String;
}

public final class korlibs/memory/DoubleBits_jvmAndAndroidKt {
	public static final fun equalsRaw (DD)Z
	public static final fun fromLowHigh (Lkotlin/jvm/internal/DoubleCompanionObject;II)D
	public static final fun getHighBits (D)I
	public static final fun getLowBits (D)I
	public static final fun getLowHighBits (DLkotlin/jvm/functions/Function2;)Ljava/lang/Object;
}

public final class korlibs/memory/Int64 : java/lang/Comparable {
	public static final field Companion Lkorlibs/memory/Int64$Companion;
	public static final fun and-eWE_2dg (DD)D
	public static final synthetic fun box-impl (D)Lkorlibs/memory/Int64;
	public synthetic fun compareTo (Ljava/lang/Object;)I
	public fun compareTo-8UhQDI4 (D)I
	public static fun compareTo-8UhQDI4 (DD)I
	public static fun constructor-impl (D)D
	public static final fun div-eWE_2dg (DD)D
	public fun equals (Ljava/lang/Object;)Z
	public static fun equals-impl (DLjava/lang/Object;)Z
	public static final fun equals-impl0 (DD)Z
	public static final fun equalsSafe-8UhQDI4 (DD)Z
	public static final fun getHigh-impl (D)I
	public static final fun getLow-impl (D)I
	public final fun getRaw ()D
	public static final fun getUlow-pVg5ArA (D)I
	public fun hashCode ()I
	public static fun hashCode-impl (D)I
	public static final fun inv-GErLBD8 (D)D
	public static final fun isNegative-impl (D)Z
	public static final fun isPositive-impl (D)Z
	public static final fun isZero-impl (D)Z
	public static final fun minus-eWE_2dg (DD)D
	public static final fun or-eWE_2dg (DD)D
	public static final fun plus-eWE_2dg (DD)D
	public static final fun rem-eWE_2dg (DD)D
	public static final fun shl-474rlN4 (DI)D
	public static final fun shr-474rlN4 (DI)D
	public static final fun times-eWE_2dg (DD)D
	public static final fun toInt-impl (D)I
	public static final fun toLong-impl (D)J
	public fun toString ()Ljava/lang/String;
	public static fun toString-impl (D)Ljava/lang/String;
	public static final fun unaryMinus-GErLBD8 (D)D
	public static final fun unaryPlus-GErLBD8 (D)D
	public final synthetic fun unbox-impl ()D
	public static final fun ushr-474rlN4 (DI)D
	public static final fun xor-eWE_2dg (DD)D
}

public final class korlibs/memory/Int64$Companion {
	public final fun add-j5Gu_mY (IIII)D
	public final fun equals-OgVMfvY (DD)Z
	public final fun fromInt52-474rlN4 (D)D
	public final fun fromRaw-474rlN4 (D)D
	public final fun getZERO-GErLBD8 ()D
	public final fun imul-j5Gu_mY (IIII)D
	public final fun invoke-0iS4LRU (I)D
	public final fun invoke-474rlN4 (I)D
	public final fun invoke-474rlN4 (J)D
	public final fun invoke-BiT2Tc4 (II)D
	public final fun invoke-eWE_2dg (D)D
	public final fun sub-j5Gu_mY (IIII)D
}

public final class korlibs/memory/Int64Array : java/lang/Iterable, kotlin/jvm/internal/markers/KMappedMarker {
	public static final field Companion Lkorlibs/memory/Int64Array$Companion;
	public static final synthetic fun box-impl ([D)Lkorlibs/memory/Int64Array;
	public static fun constructor-impl (ID)[D
	public static fun constructor-impl ([D)[D
	public static synthetic fun constructor-impl$default (IDILkotlin/jvm/internal/DefaultConstructorMarker;)[D
	public fun equals (Ljava/lang/Object;)Z
	public static fun equals-impl ([DLjava/lang/Object;)Z
	public static final fun equals-impl0 ([D[D)Z
	public static final fun get-474rlN4 ([DI)D
	public static final fun getIndices-impl ([D)Lkotlin/ranges/IntRange;
	public final fun getRaw ()[D
	public static final fun getSize-impl ([D)I
	public fun hashCode ()I
	public static fun hashCode-impl ([D)I
	public fun iterator ()Ljava/util/Iterator;
	public static fun iterator-impl ([D)Ljava/util/Iterator;
	public static final fun set-eS3UO-s ([DID)V
	public fun toString ()Ljava/lang/String;
	public static fun toString-impl ([D)Ljava/lang/String;
	public final synthetic fun unbox-impl ()[D
}

public final class korlibs/memory/Int64Array$Companion {
	public final fun invoke-mC-LaXA (ILkotlin/jvm/functions/Function1;)[D
}

public final class korlibs/memory/Int64Kt {
	public static final fun contentEquals-x91RTJE ([D[D)Z
	public static final fun contentHashCode-Zj7k58A ([D)I
	public static final fun contentToString-Zj7k58A ([D)Ljava/lang/String;
	public static final fun copyOf-xXktsMo ([DI)[D
	public static synthetic fun copyOf-xXktsMo$default ([DIILjava/lang/Object;)[D
	public static final fun copyOfRange-ll07cu4 ([DII)[D
	public static final fun getOrElse-ll07cu4 ([DILkotlin/jvm/functions/Function1;)D
	public static final fun getOrNull-xXktsMo ([DI)Lkorlibs/memory/Int64;
	public static final fun int64ArrayOf ([I)[D
	public static final fun int64ArrayOf ([J)[D
	public static final fun int64ArrayOf ([Lkorlibs/memory/Int64;)[D
	public static final fun toInt64 (B)D
	public static final fun toInt64 (D)D
	public static final fun toInt64 (I)D
	public static final fun toInt64 (J)D
	public static final fun toInt64 (Ljava/lang/Number;)D
}

public final class korlibs/memory/IntMaskRange {
	public static final field Companion Lkorlibs/memory/IntMaskRange$Companion;
	public static final synthetic fun box-impl (I)Lkorlibs/memory/IntMaskRange;
	public static final fun component1-impl (I)I
	public static final fun component2-impl (I)I
	public fun equals (Ljava/lang/Object;)Z
	public static fun equals-impl (ILjava/lang/Object;)Z
	public static final fun equals-impl0 (II)Z
	public static final fun extract-impl (II)I
	public static final fun extractSigned-impl (IIZ)I
	public static synthetic fun extractSigned-impl$default (IIZILjava/lang/Object;)I
	public static final fun getOffset-impl (I)I
	public final fun getRaw ()I
	public static final fun getSize-impl (I)I
	public fun hashCode ()I
	public static fun hashCode-impl (I)I
	public static final fun toMask-impl (I)I
	public fun toString ()Ljava/lang/String;
	public static fun toString-impl (I)Ljava/lang/String;
	public final synthetic fun unbox-impl ()I
}

public final class korlibs/memory/IntMaskRange$Companion {
	public final fun fromMask-fOHE7dY (I)I
	public final fun fromRange-X14_DSw (II)I
}

public final class korlibs/number/StringExtKt {
	public static final fun appendGenericArray (Ljava/lang/StringBuilder;ILkotlin/jvm/functions/Function2;)V
	public static final fun appendNice (Ljava/lang/StringBuilder;DZ)V
	public static final fun appendNice (Ljava/lang/StringBuilder;FZ)V
	public static synthetic fun appendNice$default (Ljava/lang/StringBuilder;DZILjava/lang/Object;)V
	public static synthetic fun appendNice$default (Ljava/lang/StringBuilder;FZILjava/lang/Object;)V
	public static final fun getNiceStr (D)Ljava/lang/String;
	public static final fun getNiceStr (F)Ljava/lang/String;
	public static final fun niceStr (DIZ)Ljava/lang/String;
	public static final fun niceStr (FIZ)Ljava/lang/String;
	public static synthetic fun niceStr$default (DIZILjava/lang/Object;)Ljava/lang/String;
	public static synthetic fun niceStr$default (FIZILjava/lang/Object;)Ljava/lang/String;
}

